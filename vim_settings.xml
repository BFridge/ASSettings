<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="E:/Paopao/paopao_android/paopao_circle/src/main/java/com/iqiyi/paopao/starwall/utils/PPCircleUtils.java" timestamp="1506074004657">
        <mark key="[" line="122" column="88" />
        <mark key="]" line="123" column="97" />
        <mark key="^" line="123" column="97" />
        <mark key="." line="123" column="97" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/cardv3/action/PaoPaoCardAction.java" timestamp="1506693826627">
        <mark key="[" line="509" column="46" />
        <mark key="]" line="509" column="54" />
        <mark key="^" line="509" column="54" />
        <mark key="." line="509" column="54" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/res/layout/pp_crow_funding_profile_layout.xml" timestamp="1504700060655">
        <mark key="[" line="222" column="0" />
        <mark key="]" line="222" column="43" />
        <mark key="." line="222" column="0" />
      </file>
      <file name="E:/Paopao/qiyivideo/gradle/wrapper/gradle-wrapper.properties" timestamp="1505977733965">
        <mark key="[" line="5" column="68" />
        <mark key="]" line="5" column="69" />
        <mark key="." line="5" column="69" />
        <mark key="^" line="5" column="68" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/adapter/CommentsListPresenter.java" timestamp="1506595323440">
        <mark key="[" line="744" column="51" />
        <mark key="]" line="744" column="56" />
        <mark key="." line="744" column="56" />
        <mark key="^" line="744" column="56" />
      </file>
      <file name="E:/Paopao/qiyivideo/app/QYVideoClient/src/org/qiyi/video/homepage/viewgroup/ScrollLinearLayout.java" timestamp="1506579323131">
        <mark key="[" line="212" column="8" />
        <mark key="]" line="212" column="9" />
        <mark key="^" line="212" column="9" />
        <mark key="." line="212" column="9" />
      </file>
      <file name="E:/Paopao/qiyivideo/app/QYVideoClient/src/com/qiyi/video/pages/category/BottomCategoryNaviUIPage.java" timestamp="1506671957307" />
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/module/detail/IDetailAction.java" timestamp="1505740803005">
        <mark key="[" line="44" column="0" />
        <mark key="]" line="44" column="0" />
        <mark key="." line="44" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_common_library/extLibs/allclasses.jar!/org/qiyi/basecard/v3/page/IPage.class" timestamp="1506657913270" />
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/presenter/CommentBarPresenter.java" timestamp="1506348055532">
        <mark key="[" line="205" column="12" />
        <mark key="]" line="205" column="19" />
        <mark key="^" line="205" column="19" />
        <mark key="." line="205" column="19" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/audiorecord/ui/RecordAudioView.java" timestamp="1506346420186">
        <mark key="[" line="87" column="0" />
        <mark key="]" line="87" column="0" />
        <mark key="." line="87" column="0" />
        <mark key="^" line="84" column="52" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/callback/PPLevelJsBridge.java" timestamp="1505394062033">
        <mark key="[" line="27" column="0" />
        <mark key="]" line="27" column="0" />
        <mark key="." line="27" column="0" />
      </file>
      <file name="E:/Paopao/qiyivideo/biz/Player/QYPlayerCardView/src/com/iqiyi/qyplayercardview/portraitv3/presenter/CommentPresenter.java" timestamp="1506692021073" />
      <file name="E:/Paopao/qiyivideo/app/QYVideoClient/src/com/qiyi/video/pages/WebPage.java" timestamp="1506671319716" />
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/res/layout/pp_feed_comment_item.xml" timestamp="1506653005224">
        <mark key="[" line="275" column="43" />
        <mark key="]" line="275" column="44" />
        <mark key="." line="275" column="44" />
        <mark key="^" line="275" column="43" />
      </file>
      <file name="E:/Paopao/qiyivideo/app/QYVideoClient/src/com/qiyi/video/pages/CommonCardPage.java" timestamp="1506673040123" />
      <file name="E:/Paopao/paopao_android/paopao_common_library/extLibs/allclasses.jar!/org/qiyi/basecard/v3/page/BasePage.class" timestamp="1506669449673" />
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/utils/PPCommonJsonParser.java" timestamp="1506064544107">
        <mark key="[" line="570" column="40" />
        <mark key="]" line="570" column="41" />
        <mark key="." line="570" column="41" />
        <mark key="^" line="570" column="41" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/models/CommentRepository.java" timestamp="1506498823943">
        <mark key="[" line="243" column="0" />
        <mark key="]" line="243" column="0" />
        <mark key="." line="243" column="0" />
        <mark key="^" line="242" column="80" />
      </file>
      <file name="E:/Paopao/qiyivideo/app/QYVideoClient/src/org/qiyi/android/video/pagemgr/BaseMainUIPage.java" timestamp="1506672425806" />
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/frag/FeedDetailFragment.java" timestamp="1506674576865">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="124" column="40" />
        <mark key="]" line="124" column="39" />
        <mark key="." line="124" column="39" />
        <mark key="^" line="124" column="39" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/ui/activity/GeneralCircleActivity.java" timestamp="1506666852666" />
      <file name="E:/Paopao/paopao_android/paopao_feed/src/main/java/com/iqiyi/feed/entity/CommentEntity.java" timestamp="1506498452067">
        <mark key="[" line="285" column="5" />
        <mark key="]" line="287" column="40" />
        <mark key="^" line="287" column="40" />
        <mark key="." line="287" column="40" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/holder/CommentsConfiguration.java" timestamp="1505984162006">
        <mark key="[" line="64" column="7" />
        <mark key="]" line="64" column="7" />
        <mark key="." line="64" column="7" />
        <mark key="^" line="64" column="15" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/stat/performance/fps/FrameCounter.java" timestamp="1506673196857">
        <mark key="[" line="82" column="69" />
        <mark key="]" line="82" column="68" />
        <mark key="^" line="82" column="68" />
        <mark key="." line="82" column="68" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/utils/fanslevel/FansLevelUtils.java" timestamp="1505398671400">
        <mark key="[" line="55" column="0" />
        <mark key="]" line="55" column="97" />
        <mark key="." line="80" column="81" />
      </file>
      <file name="E:/Paopao/qiyivideo/component/QYContext/src/org/qiyi/context/utils/QyIdUtils.java" timestamp="1506683305971" />
      <file name="E:/Paopao/paopao_android/paopao_feed/src/main/java/com/iqiyi/feed/ui/interfaces/ICommentHost.java" timestamp="1505983963356">
        <mark key="[" line="62" column="0" />
        <mark key="]" line="62" column="0" />
        <mark key="^" line="61" column="10" />
        <mark key="." line="62" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/helper/FeedJumpHelper.java" timestamp="1505892652309">
        <mark key="[" line="89" column="0" />
        <mark key="]" line="89" column="0" />
        <mark key="." line="89" column="0" />
      </file>
      <file name="E:/Paopao/qiyivideo/build.gradle" timestamp="1505976967852">
        <mark key="[" line="9" column="9" />
        <mark key="]" line="12" column="0" />
        <mark key="." line="12" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/ui/view/QYImageGridViewNew.java" timestamp="1506673375135" />
      <file name="E:/Paopao/qiyivideo/settings.gradle" timestamp="1505702601975">
        <mark key="[" line="183" column="0" />
        <mark key="]" line="183" column="0" />
        <mark key="." line="183" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/stat/CardV3PingbackDelegate.java" timestamp="1505976224521">
        <mark key="[" line="14" column="0" />
        <mark key="]" line="14" column="0" />
        <mark key="." line="14" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/ui/view/ViewMoreLayout.java" timestamp="1506071889212">
        <mark key="[" line="88" column="23" />
        <mark key="]" line="88" column="26" />
        <mark key="." line="88" column="26" />
        <mark key="^" line="88" column="26" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/ui/helper/CommonFeedContentHelper.java" timestamp="1506073967027">
        <mark key="[" line="578" column="84" />
        <mark key="]" line="579" column="93" />
        <mark key="^" line="579" column="93" />
        <mark key="." line="579" column="93" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/helper/CommentsHelper.java" timestamp="1506564603975">
        <mark key="[" line="35" column="0" />
        <mark key="]" line="35" column="0" />
        <mark key="." line="35" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/detail/helper/CommonDetailHelper.java" timestamp="1505397070663">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="11" column="0" />
        <mark key="." line="11" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_common_library/extLibs/allclasses.jar!/org/qiyi/video/page/v3/page/view/V3BasePage.class" timestamp="1506659888814" />
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/holder/CommentsLogicHolder.java" timestamp="1506592334865">
        <mark key="[" line="372" column="12" />
        <mark key="]" line="372" column="12" />
        <mark key="^" line="402" column="63" />
        <mark key="." line="372" column="12" />
      </file>
      <file name="/Dummy.txt" timestamp="1506696427809">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="26" column="0" />
        <mark key="." line="26" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/adapter/viewholder/CommentHolder.java" timestamp="1506498090698">
        <mark key="[" line="93" column="96" />
        <mark key="]" line="94" column="7" />
        <mark key="." line="94" column="7" />
        <mark key="^" line="94" column="7" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_feed/src/main/java/com/iqiyi/feed/ui/adapter/CommentsListPresenter.java" timestamp="1506696790687">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="963" column="47" />
        <mark key="." line="32" column="0" />
        <mark key="^" line="972" column="130" />
      </file>
      <file name="E:/Paopao/qiyivideo/component/Card/QYCardV3/src/org/qiyi/card/v3/block/blockmodel/Block125Model.java" timestamp="1505879169029">
        <mark key="[" line="52" column="0" />
        <mark key="]" line="52" column="0" />
        <mark key="." line="52" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_common_library/extLibs/allclasses.jar!/org/qiyi/basecard/v3/adapter/ICardAdapter.class" timestamp="1506695582134" />
      <file name="E:/Paopao/paopao_android/paopao_feed/src/main/java/com/iqiyi/feed/common/helper/CommentFeedHost.java" timestamp="1505983004908">
        <mark key="[" line="141" column="0" />
        <mark key="]" line="141" column="0" />
        <mark key="." line="141" column="0" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_common_library/src/main/java/com/iqiyi/paopao/lib/common/ui/view/NineGridImageView.java" timestamp="1506674282486" />
      <file name="E:/Paopao/qiyivideo/biz/Player/QYPlayerCardView/src/com/iqiyi/qyplayercardview/portraitv3/view/CommentPanel.java" timestamp="1506690919104" />
      <file name="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/stat/performance/fps/FrameCountMonitor.java" timestamp="1506049647777">
        <mark key="[" line="18" column="22" />
        <mark key="]" line="18" column="35" />
        <mark key="." line="18" column="35" />
        <mark key="^" line="18" column="35" />
      </file>
      <file name="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/frag/DownLoadViewPagerFragment.java" timestamp="1506679614557">
        <mark key="[" line="411" column="45" />
        <mark key="]" line="411" column="45" />
        <mark key="." line="411" column="45" />
        <mark key="^" line="413" column="7" />
      </file>
      <file name="/fragment.java" timestamp="1506673108279">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="12" />
        <mark key="^" line="0" column="11" />
        <mark key="." line="0" column="12" />
      </file>
      <file name="E:/android-architecture/BitmapOp/app/src/main/java/com/example/dongzesong/bitmapop/ExceptionUtils.java" timestamp="1504705030004">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="216" column="14" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="184" column="16" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="77" column="26" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/ui/adapter/viewholder/CommentHolder.java" />
      <jump line="233" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="52" column="4" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="1250" column="12" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/ui/activity/FeedDetailActivity.java" />
      <jump line="805" column="19" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/ui/activity/FeedDetailActivity.java" />
      <jump line="177" column="22" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="234" column="28" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="180" column="8" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="169" column="10" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="0" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="19" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/res/layout/pp_level_icon_layout.xml" />
      <jump line="172" column="10" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/PPMultiNameView.java" />
      <jump line="237" column="46" filename="E:/Paopao/paopao_android/paopao_android/src/main/res/layout/pp_qz_feed_header.xml" />
      <jump line="85" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/activity/base/PaoPaoBaseActivity.java" />
      <jump line="1915" column="4" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/ui/activity/FeedDetailActivity.java" />
      <jump line="46" column="59" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/view/resizelayout/ResizeLayout.java" />
      <jump line="23" column="0" filename="E:/Paopao/qiyivideo/QYVideoClient/build.gradle" />
      <jump line="150" column="41" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/im/http/helper/RosterHttpHelper.java" />
      <jump line="29" column="74" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/im/http/helper/RosterCardHttpHelper.java" />
      <jump line="38" column="0" filename="E:/Paopao/qiyivideo/settings.gradle" />
      <jump line="0" column="0" filename="E:/Paopao/qiyivideo/settings.gradle" />
      <jump line="3210" column="4" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/adapter/viewholder/ViewHolderCircleContent.java" />
      <jump line="0" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/ui/adapter/viewholder/ViewHolderCircleContent.java" />
      <jump line="152" column="0" filename="E:/Paopao/qiyivideo/app/QYVideoClient/build.gradle" />
      <jump line="0" column="0" filename="E:/Paopao/qiyivideo/app/QYVideoClient/build.gradle" />
      <jump line="246" column="8" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/presenter/DetailCommentsJumpPresenter.java" />
      <jump line="728" column="115" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/ui/frag/QZFansCircleHitRankFragment.java" />
      <jump line="189" column="15" filename="E:/Paopao/qiyivideo/component/Card/QYBaseCardV3/src/org/qiyi/basecard/v3/data/statistics/BlockStatistics.java" />
      <jump line="0" column="0" filename="E:/Paopao/qiyivideo/component/Card/QYBaseCardV3/src/org/qiyi/basecard/v3/data/statistics/BlockStatistics.java" />
      <jump line="259" column="11" filename="D:/Android/sdk/sources/android-24/android/transition/Transition.java" />
      <jump line="2446" column="0" filename="D:/Android/sdk/sources/android-24/android/transition/Transition.java" />
      <jump line="967" column="0" filename="E:/Paopao/qiyivideo/biz/CrashReporter/src/main/java/com/qiyi/crashreporter/core/CrashHandler.java" />
      <jump line="0" column="0" filename="E:/Paopao/qiyivideo/biz/CrashReporter/src/main/java/com/qiyi/crashreporter/core/CrashHandler.java" />
      <jump line="270" column="29" filename="E:/Paopao/qiyivideo/app/QYVideoClient/src/org/qiyi/video/homepage/viewgroup/ScrollLinearLayout.java" />
      <jump line="0" column="0" filename="E:/Paopao/qiyivideo/app/QYVideoClient/src/org/qiyi/video/homepage/viewgroup/ScrollLinearLayout.java" />
      <jump line="31" column="18" filename="E:/Paopao/qiyivideo/app/QYVideoClient/src/org/qiyi/video/homepage/viewgroup/ScrollLinearLayout.java" />
      <jump line="619" column="23" filename="E:/Paopao/qiyivideo/component/Card/QYBaseCardV3/src/org/qiyi/basecard/v3/viewmodel/block/AbsBlockModel.java" />
      <jump line="0" column="0" filename="E:/Paopao/qiyivideo/component/Card/QYBaseCardV3/src/org/qiyi/basecard/v3/viewmodel/block/AbsBlockModel.java" />
      <jump line="121" column="42" filename="E:/Paopao/qiyivideo/component/Card/QYCardV3/src/org/qiyi/card/v3/block/MainBlockManager.java" />
      <jump line="545" column="37" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/homepage/ui/adapter/PPSquareAdapter.java" />
      <jump line="561" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/homepage/ui/adapter/PPSquareAdapter.java" />
      <jump line="806" column="22" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/adapter/FeedDetailCommentsAdapter.java" />
      <jump line="1479" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/adapter/FeedDetailCommentsAdapter.java" />
      <jump line="50" column="26" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/data/PPCircleRepository.java" />
      <jump line="36" column="59" filename="E:/Paopao/qiyivideo/biz/QYPaopao/build.gradle" />
      <jump line="24" column="27" filename="E:/Paopao/paopao_android/paopao_common_library/src/main/java/com/iqiyi/paopao/lib/common/performance/fps/FrameCounter.java" />
      <jump line="53" column="12" filename="E:/Paopao/paopao_android/paopao_common_library/src/main/java/com/iqiyi/paopao/lib/common/performance/fps/FrameCounter.java" />
      <jump line="114" column="46" filename="E:/Paopao/paopao_android/paopao_common_library/src/main/java/com/iqiyi/paopao/datareact/FeatureLiveData.java" />
      <jump line="0" column="0" filename="E:/Paopao/paopao_android/paopao_common_library/src/main/java/com/iqiyi/paopao/datareact/FeatureLiveData.java" />
      <jump line="251" column="13" filename="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/utils/ui/BitmapUtil.java" />
      <jump line="83" column="0" filename="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/ui/view/ptr/CommonPtrRecyclerView.java" />
      <jump line="51" column="8" filename="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/ui/view/ptr/CommonPtrRecyclerView.java" />
      <jump line="0" column="0" filename="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/lib/common/ui/view/ptr/CommonPtrRecyclerView.java" />
      <jump line="174" column="32" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/cardv3/action/PaoPaoCardCustomAction.java" />
      <jump line="0" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/cardv3/action/PaoPaoCardCustomAction.java" />
      <jump line="155" column="30" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/starwall/module/CircleModule.java" />
      <jump line="162" column="49" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/common/cardv3/action/PaoPaoCardAction.java" />
      <jump line="176" column="53" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/homepage/module/HomeModule.java" />
      <jump line="66" column="4" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/homepage/module/HomeModule.java" />
      <jump line="96" column="12" filename="E:/Paopao/qiyivideo/app/QYVideoClient/debug/com/qiyi/video/stetho/StethoUtils.java" />
      <jump line="0" column="0" filename="E:/Paopao/qiyivideo/app/QYVideoClient/debug/com/qiyi/video/stetho/StethoUtils.java" />
      <jump line="76" column="52" filename="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/audiorecord/AudioRecordManager.java" />
      <jump line="93" column="12" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/homepage/cardv3/circle/CircleListFragment.java" />
      <jump line="343" column="4" filename="E:/Paopao/paopao_android/paopao_middle_common_library/src/main/java/com/iqiyi/paopao/h5/activity/CommonWebViewNewActivity.java" />
      <jump line="707" column="8" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/frag/FeedDetailFragment.java" />
      <jump line="0" column="0" filename="E:/Paopao/paopao_android/paopao_android/src/main/java/com/iqiyi/paopao/detail/ui/frag/FeedDetailFragment.java" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="-" type="4">
        <text>null</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">aW1wb3J0IGNvbS5pcWl5aS5wYW9wYW8uUjsK</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgRmVlZEp1bXBIZWxwZXIuanVtcDJQcmV2aWV3UGhvdG9zKG1Db250ZXh0LCAwLCAwLCAwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lZGlhRW50aXRpZXMsIGZhbHNlLCAwLCBWaWV3VXRpbHMuZ2V0U2luZ2xlVmlld0luZm8odmlldyksIG51bGwpOwo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">aW1wb3J0IGNvbS5pcWl5aS5wYW9wYW8uUjsK</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">aW1wb3J0IGNvbS5pcWl5aS5wYW9wYW8uY29tbW9uLnV0aWxzLlVzZXJJbmZvVXRpbHM7Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">aW1wb3J0IGNvbS5pcWl5aS5wYW9wYW8uY29tbW9uLnVpLmhlbHBlci5GZWVkSnVtcEhlbHBlcjsK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">aW1wb3J0IGNvbS5pcWl5aS5wYW9wYW8uY29tbW9uLmVudGl0eS5DaGFuZ2VkRGF0YU9mQ29tbWVudHM7Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudEhvbGRlci5yZXBsaWVkQ29tbWVudENvbnRlbnQuc2V0VGV4dChwaWNMaW5rKTsK</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudEhvbGRlci5yZXBsaWVkQ29tbWVudENvbnRlbnQuc2V0T25Ub3VjaExpc3RlbmVyKG5ldyBMaW5rTW92ZW1lbnRNZXRob2RPdmVycmlkZSgpKTsK</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICAgICAgY29tbWVudEhvbGRlcgo=</text>
      </register>
      <register name=":" type="4">
        <text>145</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search />
      <history-cmd>
        <entry>2415</entry>
        <entry>2597</entry>
        <entry>112</entry>
        <entry>221</entry>
        <entry>wq</entry>
        <entry>q</entry>
        <entry>455</entry>
        <entry>396</entry>
        <entry>860</entry>
        <entry>145</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 6</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 2</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>